/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Dao.phieuNhapChiTietDao;
import Dao.phieuNhapDao;
import Helper.Check;
import Helper.auth;
import Helper.dateHelper;
import Helper.dialogHelper;
import Helper.displayModel;
import Helper.jdbcHelper;
import Model.phieuNhapChiTiet;
import Model.phieuNhap;
import static java.awt.Color.pink;
import static java.awt.Color.white;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NGUYEN TRI TUE
 */
public class phieuNhapInter extends javax.swing.JInternalFrame {

    /**
     * Creates new form phieuNhap
     */
    public phieuNhapInter() {
        initComponents();
        initt();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtMaPN = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        btnThem1 = new javax.swing.JButton();
        btnXoa1 = new javax.swing.JButton();
        btnXoaTrang1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTTPhieuNhap = new javax.swing.JTable();
        cbbNhaCC = new javax.swing.JComboBox<>();
        txtNgayNhap = new javax.swing.JLabel();
        txtTongTien1 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        txtMaSP = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMaCT = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXoaTrang = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTTPNChiTiet = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        txtDonGia = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnTinhTien = new javax.swing.JButton();
        txtMaPN_ct = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);

        jPanel7.setBackground(new java.awt.Color(218, 242, 220));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Mã phiếu nhập:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Mã nhân viên:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Tên nhà cung cấp:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Ngày nhập:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Tổng tiền:");

        jPanel8.setBackground(new java.awt.Color(129, 183, 210));
        jPanel8.setForeground(new java.awt.Color(129, 183, 210));

        btnThem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Add.png"))); // NOI18N
        btnThem1.setText("Thêm");
        btnThem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem1ActionPerformed(evt);
            }
        });

        btnXoa1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete.png"))); // NOI18N
        btnXoa1.setText("Xoá");
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });

        btnXoaTrang1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Refresh.png"))); // NOI18N
        btnXoaTrang1.setText("Xoá trắng");
        btnXoaTrang1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrang1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThem1)
                .addGap(27, 27, 27)
                .addComponent(btnXoa1)
                .addGap(18, 18, 18)
                .addComponent(btnXoaTrang1)
                .addGap(64, 64, 64))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem1)
                    .addComponent(btnXoa1)
                    .addComponent(btnXoaTrang1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblTTPhieuNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu nhập", "Mã nhân viên", "Mã nhà CC", "Ngày lập", "Tổng tiền"
            }
        ));
        tblTTPhieuNhap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTTPhieuNhapMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblTTPhieuNhap);

        txtNgayNhap.setText("DATE");

        txtTongTien1.setText("0");

        txtMaNV.setText("MÃ NV");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(22, 22, 22)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaPN, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(cbbNhaCC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMaNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(91, 91, 91)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTongTien1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtMaPN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtMaNV)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtNgayNhap))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtTongTien1))))
                .addGap(32, 32, 32)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cbbNhaCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 51));
        jLabel8.setText("THÔNG TIN PHIẾU NHẬP");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 19, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(262, 262, 262)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("PHIẾU NHẬP", jPanel6);

        jPanel14.setBackground(new java.awt.Color(218, 242, 220));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Mã chi tiết phiếu nhập:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Mã phiếu nhập:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Mã sản phẩm:");

        txtSoLuong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSoLuongKeyReleased(evt);
            }
        });

        txtMaSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaSPKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Số lượng:");

        jPanel4.setBackground(new java.awt.Color(129, 183, 210));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete.png"))); // NOI18N
        btnXoa.setText("Xoá ");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Refresh.png"))); // NOI18N
        btnXoaTrang.setText("Xoá trắng");
        btnXoaTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btnThem)
                .addGap(18, 18, 18)
                .addComponent(btnXoa)
                .addGap(18, 18, 18)
                .addComponent(btnXoaTrang)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa)
                    .addComponent(btnXoaTrang)
                    .addComponent(btnThem))
                .addGap(19, 19, 19))
        );

        tblTTPNChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã CTPN", "MÃ HD", "MÃ SP", "Tên SP", "Số lượng", "Đơn giá ", "Tổng Tiền"
            }
        ));
        tblTTPNChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTTPNChiTietMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTTPNChiTiet);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Tổng tiền:");

        txtTenSP.setEditable(false);

        txtDonGia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDonGiaKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Đơn giá:");

        btnTinhTien.setText("Tính tiền");
        btnTinhTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTinhTienActionPerformed(evt);
            }
        });

        txtMaPN_ct.setText("MÃ PN");

        txtTongTien.setText("0 vnd");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMaCT, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel18)
                                            .addComponent(jLabel19))
                                        .addGap(52, 52, 52)
                                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel14Layout.createSequentialGroup()
                                                .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtMaPN_ct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addGap(166, 166, 166)
                                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnTinhTien)
                                            .addComponent(txtDonGia, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                                            .addComponent(txtTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(429, 429, 429)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel12))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(206, 206, 206))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtMaCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaPN_ct))
                .addGap(31, 31, 31)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtTongTien))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTinhTien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("THÔNG TIN PHIẾU NHẬP CHI TIẾT");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("PHIẾU NHẬP CHI TIẾT", jPanel13);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem1ActionPerformed
        if (Check.checkNullText(txtMaPN)
                ) {
            if (checkTrungMa(txtMaPN)) {
                insertPN();
            }
        }
    }//GEN-LAST:event_btnThem1ActionPerformed

    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
        deletePN();
    }//GEN-LAST:event_btnXoa1ActionPerformed

    private void btnXoaTrang1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrang1ActionPerformed
        xoaFormPN();
        btnThem1.setEnabled(true);
        txtMaPN.setEditable(true);
    }//GEN-LAST:event_btnXoaTrang1ActionPerformed

    private void tblTTPhieuNhapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTTPhieuNhapMouseClicked
        setFormPN();
        btnThem1.setEnabled(false);
        txtMaPN.setEditable(false);
    }//GEN-LAST:event_tblTTPhieuNhapMouseClicked

    private void txtSoLuongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSoLuongKeyReleased
//        int SoLuong = 0;
//        String donGia = "";
//        String Tien = "";
//        try {
//            SoLuong = Integer.valueOf(txtSoLuong.getText());
//        } catch (Exception e) {
//        }
//        donGia = txtDonGia.getText();
//        Tien =  donGia * SoLuong;
//        txtTongTien.setText(String.valueOf(Tien));
    }//GEN-LAST:event_txtSoLuongKeyReleased

    private void txtMaSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaSPKeyReleased
        String maSP = txtMaSP.getText();
        txtSoLuong.setText("");
        txtTongTien.setText("");
        String ten = layDuLieuSanPham(maSP);
        txtTenSP.setText(ten);
    }//GEN-LAST:event_txtMaSPKeyReleased

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (Check.checkNullText(txtMaCT)               
                && Check.checkNullText(txtMaSP)
                && Check.checkNullText(txtTenSP)
                && Check.checkNullText(txtSoLuong)) {
            if (checkTrungMaCT(txtMaCT)) {
                insertCT();
            }

        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        deleteCT();
        btnTinhTien.setEnabled(true);
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnXoaTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrangActionPerformed
        xoaTrangCt();
        btnTinhTien.setEnabled(true);
        btnThem.setEnabled(true);
    }//GEN-LAST:event_btnXoaTrangActionPerformed

    private void tblTTPNChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTTPNChiTietMouseClicked
        int viTri = tblTTPNChiTiet.getSelectedRow();
        btnTinhTien.setEnabled(false);
        txtMaCT.setText(tblTTPNChiTiet.getValueAt(viTri, 1).toString());
        txtMaPN.setText(tblTTPNChiTiet.getValueAt(viTri, 2).toString());
        txtMaSP.setText(tblTTPNChiTiet.getValueAt(viTri, 3).toString());
        txtTenSP.setText(tblTTPNChiTiet.getValueAt(viTri, 4).toString());
        txtSoLuong.setText(tblTTPNChiTiet.getValueAt(viTri, 5).toString());
        txtDonGia.setText(tblTTPNChiTiet.getValueAt(viTri, 6).toString());
        txtTongTien.setText(tblTTPNChiTiet.getValueAt(viTri, 7).toString()+" VNĐ");
        btnThem.setEnabled(false);
    }//GEN-LAST:event_tblTTPNChiTietMouseClicked

    private void txtDonGiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDonGiaKeyReleased
//        int SoLuong = 0;
//        double donGia = 0;
//        double Tien = 0;
//        try {
//            donGia = Double.valueOf(txtDonGia.getText());
//        } catch (Exception e) {
//        }
//        donGia = GetSoLuong(txtSoLuong.getText());
//        Tien = (double) donGia * SoLuong;
//        txtTongTien.setText(String.valueOf(Tien));
    }//GEN-LAST:event_txtDonGiaKeyReleased

    private void btnTinhTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTinhTienActionPerformed
        int soLuong;
        int donGia;
        int tongTien;

        if (checkNull()) {
            if (Check.checkSo(txtSoLuong)
                    && Check.checkSo(txtDonGia)) {
                try {
                    soLuong = Integer.valueOf(txtSoLuong.getText().trim());
                    donGia = Integer.valueOf(txtDonGia.getText());
                    tongTien = soLuong * donGia;
                    txtTongTien.setText((tongTien) + "");
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnTinhTienActionPerformed
    public boolean checkNull() {
        if (txtSoLuong.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "chưa nhap đầy đủ");
            txtSoLuong.requestFocus();
            return false;
        } else if (txtDonGia.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "chưa nhap đầy đủ");
            txtDonGia.requestFocus();
            return false;
        } else {
            return true;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThem1;
    private javax.swing.JButton btnTinhTien;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoa1;
    private javax.swing.JButton btnXoaTrang;
    private javax.swing.JButton btnXoaTrang1;
    private javax.swing.JComboBox<String> cbbNhaCC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblTTPNChiTiet;
    private javax.swing.JTable tblTTPhieuNhap;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMaCT;
    private javax.swing.JLabel txtMaNV;
    private javax.swing.JTextField txtMaPN;
    private javax.swing.JLabel txtMaPN_ct;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JLabel txtNgayNhap;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JLabel txtTongTien;
    private javax.swing.JLabel txtTongTien1;
    // End of variables declaration//GEN-END:variables

    phieuNhapDao pnDao = new phieuNhapDao();
    phieuNhapChiTietDao ctDao = new phieuNhapChiTietDao();
    int row;

    public void initt() {
        layDuLieuPhieuNhap();
        this.row = -1;
        cbbNhaCC.setModel(LayDuLieucbb("NHACUNGCAP", "TENNCC", "MANCC"));
        
        Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        txtNgayNhap.setText(sdf.format(date));
        txtTongTien1.setText("0");
      
        txtMaNV.setText(auth.user.getMaNV());
        
    }

    public boolean checkTrungMa(JTextField txt) {
        txt.setBackground(white);
        if (pnDao.selectById(txt.getText().toString()) == null) {
            return true;
        } else {
            txt.setBackground(pink);
            dialogHelper.alert(this, txt.getName() + " đã bị tồn tại:" + txtMaPN.getText());
            return false;
        }
    }

    public boolean checkTrungMaCT(JTextField txt) {
        txt.setBackground(white);
        if (ctDao.selectById(txt.getText().toString()) == null) {
            return true;
        } else {
            txt.setBackground(pink);
            dialogHelper.alert(this, txt.getName() + " đã bị tồn tại:" + txtMaCT.getText());
            return false;
        }
    }

    public DefaultComboBoxModel LayDuLieucbb(String bang, String Ten, String Ma) {
        String cautruyvan = "select *from " + bang;
        ResultSet rs = jdbcHelper.executeQuery(cautruyvan);
        DefaultComboBoxModel cbbmodel = new DefaultComboBoxModel();
        try {
            while (rs.next()) {
                displayModel valueModel = new displayModel(rs.getString(Ten), rs.getString(Ma));
                cbbmodel.addElement(valueModel);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        return cbbmodel;
    }

    public void layDuLieuPhieuNhap() {
        String sql = "SELECT MAPN,NHANVIEN.MANV,NHACUNGCAP.TENNCC,NGAYNHAP,Format(TONGTIEN,'#,##')as TONGTIEN FROM PHIEUNHAP,NHACUNGCAP,NHANVIEN \n"
                + "                WHERE PHIEUNHAP.MANCC=NHACUNGCAP.MANCC AND PHIEUNHAP.MANV=NHANVIEN.MANV  ";
        ResultSet rs = jdbcHelper.executeQuery(sql);
        Object[] obj = new Object[]{"STT", "Mã phiếu nhập", "Mã nhân viên", "Tên nhà cung cấp", "Ngày nhập", "Tổng tiền"};
        DefaultTableModel tableModel = new DefaultTableModel(obj, 0);
        tblTTPhieuNhap.setModel(tableModel);
        int c = 0;
        try {
            while (rs.next()) {
                Object[] item = new Object[6];
                c++;
                item[0] = c;
                item[1] = rs.getString("MAPN");
                item[2] = rs.getString("MANV");
                item[3] = rs.getString("TENNCC");
                item[4] = rs.getString("NGAYNHAP");
                item[5] = rs.getString("TONGTIEN");
                tableModel.addRow(item);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }

    }

    void setFormPN() {
        int viTri = tblTTPhieuNhap.getSelectedRow();
        txtMaPN.setText(tblTTPhieuNhap.getValueAt(viTri, 1).toString());
        txtMaPN_ct.setText(tblTTPhieuNhap.getValueAt(viTri, 1).toString());
        txtMaNV.setText(tblTTPhieuNhap.getValueAt(viTri, 2).toString());
        setSelectedCombobox(tblTTPhieuNhap.getValueAt(viTri, 3).toString(), cbbNhaCC);
        txtNgayNhap.setText(tblTTPhieuNhap.getValueAt(viTri, 4).toString());
        txtTongTien1.setText(tblTTPhieuNhap.getValueAt(viTri, 5).toString()+" VNĐ");
        LayDuLieuChiTietPhieuNhap(txtMaPN_ct.getText());
    }

    public void setSelectedCombobox(String cbbselected, JComboBox cbb) {
        for (int i = 0; i < cbb.getItemCount(); i++) {
            Object obj = cbb.getItemAt(i);
            if (obj != null) {
                displayModel m = (displayModel) obj;
                if (cbbselected.trim().equals(m.displayMember)) {
                    cbb.setSelectedItem(m);
                }
            }
        }
    }

    phieuNhap getFormPN() {
        phieuNhap pn = new phieuNhap();
        pn.setMaPhieuNhap(txtMaPN.getText());
        pn.setMaNhanVien(txtMaNV.getText());
        pn.setMaNCC(GetCbbSelected(cbbNhaCC));
        pn.setNgayNhap(dateHelper.toDate(txtNgayNhap.getText()));
        pn.setTongTien((txtTongTien1.getText()));
        return pn;
    }

    void insertPN() {
        phieuNhap pn = getFormPN();
        if (pn == null) {
            return;
        }
        try {
            pnDao.insert(pn);
            this.layDuLieuPhieuNhap();
            xoaFormPN();
            dialogHelper.alert(this, "thêm mới thành công");
        } catch (Exception e) {
            e.printStackTrace();
            dialogHelper.alert(this, "Thêm thất bại!");
        }
    }

    public String GetCbbSelected(JComboBox cbb) {
        Object[] obj = cbb.getSelectedObjects();
        displayModel item = (displayModel) obj[0];
        return item.displayvalue.toString();

    }

    public void xoaFormPN() {
        txtMaPN.setText("");
        Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        txtNgayNhap.setText(sdf.format(date));
        txtTongTien1.setText("0");
        txtMaNV.setText(auth.user.getMaNV());
    }

    public void deleteCT() {
        if (!txtMaCT.getText().equals("")) {
            try {
                String maCT = txtMaCT.getText();
                ctDao.delete(maCT);
                LayDuLieuChiTietPhieuNhap(txtMaPN_ct.getText());
                SetTongTien();
                xoaTrangCt();
                dialogHelper.alert(this, "xóa thành công");
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            dialogHelper.alert(this, "bạn chưa chọn hóa đơn CT để xóa ");
        }
    }

    public void deletePN() {
        if (!txtMaPN.getText().equals("")) {
            String maPN = txtMaPN.getText();

            String sqlDem = "select count(MACTPN) as SoChiTietPhieuNhap\n"
                    + "            from PHIEUNHAP,CHITIETPHIEUNHAP where PHIEUNHAP.MAPN=CHITIETPHIEUNHAP.MAPN and PHIEUNHAP.MAPN=?";
            ResultSet rs = jdbcHelper.executeQuery(sqlDem, maPN);

            int so = 0;
            try {
                if (rs.next()) {
                    so = rs.getInt("SoChiTietPhieuNhap");
                    if (rs.getInt("SoChiTietPhieuNhap") == 0) {
                        pnDao.delete(maPN);
                        dialogHelper.alert(this, "xóa thành công rồi ạ");
                        layDuLieuPhieuNhap();
                    } else {
                        dialogHelper.alert(this, "không thể xóa bởi " + txtMaPN.getText() + " đã có " + so + " chi tiết hóa đơn");
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            dialogHelper.alert(this, "bạn chưa chọn hóa đơn để xóa ");
        }
    }

    void updatePN() {
        phieuNhap pn = getFormPN();
        if (pn == null) {
            return;
        }
        try {
            pnDao.update(pn);
            xoaFormPN();
            dialogHelper.alert(this, "sửa thành công");
            layDuLieuPhieuNhap();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public String layDuLieuSanPham(String maSP) {
        String ten = "";
        String sql = "select tenSP from sanPham where maSP=?";
        ResultSet rs = jdbcHelper.executeQuery(sql, maSP);
        try {
            if (rs.next()) {
                ten = rs.getString("tenSP");

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ten;
    }
//    public double GetDonGia(String MaCTPN) {
//        double DonGia = 0;
//
//        String cautruyvan = "select * from CHITIETPHIEUNHAP where MACHITIET=?";
//        ResultSet rs = jdbcHelper.executeQuery(cautruyvan, MaCTPN);
//        try {
//            if (rs.next()) {
//                DonGia = rs.getDouble("DONGIA");
//            }
//        } catch (SQLException ex) {
//            System.out.println(ex.toString());
//        }
//        return DonGia;
//    }
//    public int GetSoLuong(String MaCTPN) {
//        int soLuong = 0;
//
//        String cautruyvan = "select * from CHITIETPHIEUNHAP where MACHITIET=?";
//        ResultSet rs = jdbcHelper.executeQuery(cautruyvan, MaCTPN);
//        try {
//            if (rs.next()) {
//                soLuong = rs.getInt("SOLUONG");
//            }
//        } catch (SQLException ex) {
//            System.out.println(ex.toString());
//        }
//        return soLuong;
//    }

    public void LayDuLieuChiTietPhieuNhap(String maPN) {
        String sql = "SELECT MACTPN,CHITIETPHIEUNHAP.MAPN,SANPHAM.MASP,TENSP,SOLUONG,Format(DONGIA,'#,##')as donGia,Format(CHITIETPHIEUNHAP.TONGTIEN,'#,##')as tongTien FROM CHITIETPHIEUNHAP,SANPHAM,PHIEUNHAP \n"
                + "WHERE CHITIETPHIEUNHAP.MASP=SANPHAM.MASP AND CHITIETPHIEUNHAP.MAPN=PHIEUNHAP.MAPN AND CHITIETPHIEUNHAP.MAPN = ?";
        ResultSet rs = jdbcHelper.executeQuery(sql, maPN);
        Object[] obj = new Object[]{"STT", "Mã CTPN", "Mã phiếu nhâp", "Mã Sản Phẩm", "Tên SP", "Số Lượng", "Đơn giá", "Tổng tiền"};
        DefaultTableModel tableModel = new DefaultTableModel(obj, 0);
        tblTTPNChiTiet.setModel(tableModel);
        int c = 0;
        try {
            while (rs.next()) {
                c++;
                Object[] item = new Object[8];
                item[0] = c;
                item[1] = rs.getString("MACTPN");
                item[2] = rs.getString("MAPN");
                item[3] = rs.getString("MASP");
                item[4] = rs.getString("TENSP");
                item[5] = rs.getInt("SOLUONG");
                item[6] = rs.getString("DONGIA");
                item[7] = rs.getString("TONGTIEN");
                tableModel.addRow(item);
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }

    phieuNhapChiTiet getForm() {
        phieuNhapChiTiet ct = new phieuNhapChiTiet();
        ct.setMaChiTietPhieuNhap(txtMaCT.getText());
        ct.setMaPhieuNhap(txtMaPN_ct.getText());
        ct.setMaSanPham(txtMaSP.getText());
        ct.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        ct.setDonGia(txtDonGia.getText());
        ct.setTongTien(txtTongTien.getText());
        return ct;
    }

    void insertCT() {
        phieuNhapChiTiet ct = getForm();
        if (ct == null) {
            return;
        }
        try {
            ctDao.insert(ct);
            this.xoaTrangCt();
            this.LayDuLieuChiTietPhieuNhap(txtMaPN_ct.getText());
            dialogHelper.alert(this, "thêm thành công");
            SetTongTien();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void xoaTrangCt() {
        txtMaCT.setText("");
        txtMaSP.setText("");
        txtTenSP.setText("");
        txtDonGia.setText("");
        txtSoLuong.setText("");
        txtTongTien.setText("");
        txtMaCT.setText("");
        btnThem.setEnabled(true);
    }

    public void SetTongTien() {
        String maPN = txtMaPN_ct.getText();
        String sql = "select sum(cast (CHITIETPHIEUNHAP.TONGTIEN as float))as tongTienHienTai,PHIEUNHAP.MAPN\n"
                + "from PHIEUNHAP,CHITIETPHIEUNHAP\n"
                + "where PHIEUNHAP.MAPN=CHITIETPHIEUNHAP.MAPN and PHIEUNHAP.MAPN=?\n"
                + "group by PHIEUNHAP.MAPN";
        ResultSet rs = jdbcHelper.executeQuery(sql, maPN);
        String ttht = "";

        try {
            if (rs.next()) {
                ttht = rs.getString("TongTienHienTai");
                txtTongTien1.setText(ttht);
                String ctv = "update phieuNhap set TongTien= " + ttht + "where maPN=?";
                System.out.println(ctv);
                jdbcHelper.executeUpdate(ctv, maPN);
                layDuLieuPhieuNhap();
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }

}
